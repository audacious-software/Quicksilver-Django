version: 2.1

orbs:
  python: circleci/python@1.2

workflows:
  build:
    jobs:
      - build-310
      - build-39
      - build-38
      - build-37
      - build-36
      - build-27

jobs:
  build-310:
    docker:
      - image: cimg/python:3.10
      - image: cimg/postgres:9.6-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - restore_cache:
          key: venv-310-{{ .Branch }}-{{ checksum "requirements.txt" }}-dep
      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for database
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Build and validate
          command: |
            python3 -m venv --copies /home/circleci/venv
            . /home/circleci/venv/bin/activate
            pip install -U pip
            pip install wheel
            pip install -r requirements.txt --progress-bar off
            cd ..
            mv project quicksilver
            mkdir django
            cd django
            django-admin startproject qs
            mv ../quicksilver qs
            cd qs
            cp quicksilver/circle_settings.py qs/settings.py
            python manage.py migrate
            python manage.py test
            cp quicksilver/.pylintrc .
            pylint quicksilver
            bandit -r .      
      - save_cache:
          key: venv-310-{{ .Branch }}-{{ checksum "/home/circleci/django/qs/quicksilver/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app
          

  build-39:
    docker:
      - image: cimg/python:3.9
      - image: cimg/postgres:9.6-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - restore_cache:
          key: venv-39-{{ .Branch }}-{{ checksum "requirements.txt" }}-dep
      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for database
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Build and validate
          command: |
            python3 -m venv --copies /home/circleci/venv
            . /home/circleci/venv/bin/activate
            pip install -U pip
            pip install wheel
            pip install -r requirements.txt --progress-bar off
            cd ..
            mv project quicksilver
            mkdir django
            cd django
            django-admin startproject qs
            mv ../quicksilver qs
            cd qs
            cp quicksilver/circle_settings.py qs/settings.py
            python manage.py migrate
            python manage.py test
            cp quicksilver/.pylintrc .
            pylint quicksilver
            bandit -r .      
      - save_cache:
          key: venv-39-{{ .Branch }}-{{ checksum "/home/circleci/django/qs/quicksilver/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app
          
  build-38:
    docker:
      - image: cimg/python:3.8
      - image: cimg/postgres:9.6-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - restore_cache:
          key: venv-38-{{ .Branch }}-{{ checksum "requirements.txt" }}-dep
      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for database
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Build and validate
          command: |
            python3 -m venv --copies /home/circleci/venv
            . /home/circleci/venv/bin/activate
            pip install -U pip
            pip install wheel
            pip install -r requirements.txt --progress-bar off
            cd ..
            mv project quicksilver
            mkdir django
            cd django
            django-admin startproject qs
            mv ../quicksilver qs
            cd qs
            cp quicksilver/circle_settings.py qs/settings.py
            python manage.py migrate
            python manage.py test
            cp quicksilver/.pylintrc .
            pylint quicksilver
            bandit -r .      
      - save_cache:
          key: venv-38-{{ .Branch }}-{{ checksum "/home/circleci/django/qs/quicksilver/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app

  build-37:
    docker:
      - image: cimg/python:3.7
      - image: cimg/postgres:9.6-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - restore_cache:
          key: venv-37-{{ .Branch }}-{{ checksum "requirements.txt" }}-dep
      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for database
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Build and validate
          command: |
            python3 -m venv --copies /home/circleci/venv
            . /home/circleci/venv/bin/activate
            pip install -U pip
            pip install wheel
            pip install -r requirements.txt --progress-bar off
            cd ..
            mv project quicksilver
            mkdir django
            cd django
            django-admin startproject qs
            mv ../quicksilver qs
            cd qs
            cp quicksilver/circle_settings.py qs/settings.py
            python manage.py migrate
            python manage.py test
            cp quicksilver/.pylintrc .
            pylint quicksilver
            bandit -r .      
      - save_cache:
          key: venv-378-{{ .Branch }}-{{ checksum "/home/circleci/django/qs/quicksilver/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app

  build-36:
    docker:
      - image: cimg/python:3.6
      - image: cimg/postgres:9.6-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - restore_cache:
          key: venv-36-{{ .Branch }}-{{ checksum "requirements.txt" }}-dep
      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for database
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Build and validate
          command: |
            python3 -m venv --copies /home/circleci/venv
            . /home/circleci/venv/bin/activate
            pip install -U pip
            pip install wheel
            pip install -r requirements.txt --progress-bar off
            cd ..
            mv project quicksilver
            mkdir django
            cd django
            django-admin startproject qs
            mv ../quicksilver qs
            cd qs
            cp quicksilver/circle_settings.py qs/settings.py
            python manage.py migrate
            python manage.py test
            cp quicksilver/.pylintrc .
            pylint quicksilver
            bandit -r .      
      - save_cache:
          key: venv-36-{{ .Branch }}-{{ checksum "/home/circleci/django/qs/quicksilver/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app

  build-27:
    docker:
      - image: cimg/python:2.7
      - image: cimg/postgres:9.6-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - restore_cache:
          key: venv-27-{{ .Branch }}-{{ checksum "requirements.txt" }}-dep
      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for database
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Build and validate
          command: |
            virtualenv --copies /home/circleci/venv
            . /home/circleci/venv/bin/activate
            pip install -U pip
            pip install wheel
            pip install -r requirements.txt --progress-bar off
            cd ..
            mv project quicksilver
            mkdir django
            cd django
            django-admin.py startproject qs
            mv ../quicksilver qs
            cd qs
            cp quicksilver/circle_settings.py qs/settings.py
            python manage.py migrate
            python manage.py test
            cp quicksilver/.pylintrc .
            pylint quicksilver
            bandit -r .      
      - save_cache:
          key: venv-27-{{ .Branch }}-{{ checksum "/home/circleci/django/qs/quicksilver/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app
